<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/blueprint"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
	xmlns:jaxws="http://cxf.apache.org/blueprint/jaxws" xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
	xmlns:cxf="http://cxf.apache.org/blueprint/core" xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
	xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
       http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd
       http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd
      ">

	<camelcxf:cxfEndpoint id="geocodingBeanWS"
		address="/services/geocoding"
		serviceClass="com.redhat.poc.osgi.main.evt.service.impl.GeoCodingServiceImpl"
		wsdlURL="META-INF/wsdl/GeoCoding.wsdl">
		<camelcxf:properties>
			<entry key="dataFormat" value="POJO" />
		</camelcxf:properties>
	</camelcxf:cxfEndpoint>

	<bean id="geocodingBeanPOJO"
		class="com.redhat.poc.osgi.main.evt.service.impl.GeoCodingServiceImpl">
	</bean>

	<reference id="connectionFactory" interface="javax.jms.ConnectionFactory" />
	<reference id="jtaTransactionManager" interface="javax.transaction.TransactionManager" />
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<argument ref="jtaTransactionManager" />
	</bean>
	<bean id="PROPAGATION_REQUIRED" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="brokerURL" value="${activemq.broker.url}" />
		<property name="userName" value="admin" />
		<property name="password" value="admin" />

	</bean>

	<bean id="exception" class="org.apache.cxf.binding.soap.SoapFault"
		scope="prototype">
		<argument index="0" value="" />
		<argument index="1" ref="uce" />
		<argument index="2">
			<bean class="javax.xml.namespace.QName">
				<argument index="0" value="http://cxf.apache.org/faultcode" />
				<argument index="1" value="client" />
			</bean>
		</argument>
	</bean>

	<bean id="uce"
		class="com.redhat.poc.osgi.main.evt.exception.UnknownCodeException" />

	<!-- OSGI blueprint property placeholder -->
	<cm:property-placeholder id="osgi.main.evenement.placeholder"
		persistent-id="osgi.main.evenement">
		<!-- list some properties for this test -->
		<cm:default-properties>
			<cm:property name="jms.main.evenement.route.in"
				value="activemq:queue:emission.evenement.queue" />
			<cm:property name="activemq.broker.url" value="tcp://localhost:61616" />
			<cm:property name="geoconding.url"
				value="http://localhost:8181/cxf/services/geocoding" />
			<cm:property name="geocoding.switch.service" value="direct:geocoding.external.service" />
		</cm:default-properties>
	</cm:property-placeholder>

	<camelContext trace="false" id="osgi.main.evenement.context"
		xmlns="http://camel.apache.org/schema/blueprint" xmlns:rh="urn:redhat.com:poc/class">
		<errorHandler type="DefaultErrorHandler" level="ERROR"
			redeliveryPolicyRef="myPolicy" id="eh" />
		<redeliveryPolicyProfile maximumRedeliveries="0"
			retryAttemptedLogLevel="ERROR" id="myPolicy" />
		<onException redeliveryPolicyRef="myPolicy">
			<exception>com.redhat.poc.osgi.main.evt.exception.UnknownCodeException</exception>
			<exception>org.apache.cxf.binding.soap.SoapFault</exception>
			<setBody>
				<simple>${header.bodyBackup}</simple>
			</setBody>
			<removeHeader headerName="bodyBackup" />
			<setHeader headerName="retry">
				<constant>true</constant>
			</setHeader>
			<to uri="activemq:queue:reception.evenement.queue.DLQ" />
		</onException>
		<route id="jms.reception.evenement.route">
			<from uri="activemq:queue:emission.evenement.queue" />
			<transacted ref="PROPAGATION_REQUIRED" />
			<to uri="direct:geocoding.transform.service" />
			<to uri="activemq:queue:reception.evenement.queue" />
		</route>
		<route id="jms.reception.evenement.route.dlq">
			<from uri="activemq:queue:reception.evenement.queue.DLQ" />
			<to uri="activemq:queue:emission.evenement.queue" />
		</route>
		<route id="geocoding.transform.service.route">
			<from uri="direct:geocoding.transform.service" />
			<setHeader headerName="bodyBackup">
				<simple>${body}</simple>
			</setHeader>
			<setBody>
				<xpath>/rh:event/geo/text()</xpath>
			</setBody>
			<convertBodyTo type="java.lang.String" />
			<log message="GeoCoding From JMS Request ${body}" />
			<choice>
				<when>
					<simple>${header.retry} == true</simple>
					<to uri="direct:geocoding.internal.java.service" />
				</when>
				<otherwise>
					<to uri="direct:geocoding.internal.service" />
				</otherwise>
			</choice>
			<log message="GeoCoding For JMS Response ${body}" />
			<setHeader headerName="geoDecoding">
				<simple>${body}</simple>
			</setHeader>
			<setBody>
				<simple>${header.bodyBackup}</simple>
			</setBody>
			<removeHeader headerName="bodyBackup" />
			<to uri="xslt:META-INF/geoCodingTransformation.xslt" />
			<removeHeader headerName="geoDecoding" />
		</route>
		<route autoStartup="false" id="geocoding.timer.service.route">
			<from uri="timer:timer?period=10000" />
			<setBody>
				<constant>CAN</constant>
			</setBody>
			<log message="GeoCoding Timer Request ${body}" />
			<to uri="{{geocoding.switch.service}}" />
			<log message="GeoCoding Timer Response ${body}" />
		</route>
		<route id="geocoding.external.service.route">
			<from uri="direct:geocoding.external.service" />
			<log message="GeoCoding External ${body}" />
			<to
				uri="cxf:bean:geocodingBeanWS?address={{geoconding.url}}&amp;wsdlURL=META-INF/wsdl/GeoCoding.wsdl&amp;defaultOperationName=convertCodeToName" />
		</route>
		<route id="geocoding.webservice.service.route">
			<from uri="cxf:bean:geocodingBeanWS" />
			<loadBalance>
				<roundRobin />
				<to uri="direct:geocoding.internal.java.service" />
				<to uri="direct:geocoding.internal.xml.service" />
			</loadBalance>
		</route>
		<route id="geocoding.internal.service.route">
			<from uri="direct:geocoding.internal.service" />
			<loadBalance>
				<roundRobin />
				<to uri="direct:geocoding.internal.java.service" />
				<to uri="direct:geocoding.internal.xml.service" />
			</loadBalance>
		</route>
		<route id="geocoding.internal.java.service.route">
			<from uri="direct:geocoding.internal.java.service" />
			<log message="GeoCoding Internal Java Service ${body}" />
			<to uri="bean:geocodingBeanPOJO?method=convertCodeToName" />
		</route>
		<route id="geocoding.internal.xml.service.route">
			<from uri="direct:geocoding.internal.xml.service" />
			<log message="GeoCoding Internal XML Service ${body}" />
			<choice>
				<description>to uri="log:com.redhat.poc?showAll=true&amp;amp;showBodyType=true" /</description>
				<when>
					<simple>${body} == 'BRA'</simple>
					<transform>
						<constant>BRASIL</constant>
					</transform>
				</when>
				<when>
					<simple>${body} == 'CAN'</simple>
					<transform>
						<constant>CANADA</constant>
					</transform>
				</when>
				<when>
					<simple>${body} == 'FRA'</simple>
					<transform>
						<constant>FRANCE</constant>
					</transform>
				</when>
				<when>
					<simple>${body} == 'JPN'</simple>
					<transform>
						<constant>JAPAN</constant>
					</transform>
				</when>
				<otherwise>
					<throwException ref="uce">
						<description>RUS, MAR</description>
					</throwException>
				</otherwise>
			</choice>
		</route>
	</camelContext>

</blueprint>
