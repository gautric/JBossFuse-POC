<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) Red Hat, Inc. Red Hat licenses this file to you under 
	the Apache License, version 2.0 (the "License"); you may not use this file 
	except in compliance with the License. You may obtain a copy of the License 
	at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable 
	law or agreed to in writing, software distributed under the License is distributed 
	on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
	express or implied. See the License for the specific language governing permissions 
	and limitations under the License. -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">


	<!-- ********************************************************************* -->
	<!-- Part 2: If bug ENTESB-633 did not exist we could auto-enlist the JDBC 
		driver into Aries. -->
	<!-- This defines the actual data source bean. It will instantiate a new 
		ClientXADataSource instance and will use the corresponding settings to set 
		the database and server name. In our case, we will be running Apache Derby 
		on the same machine so the server name is `localhost`. A database called 
		`transactions` has been created up-front as well (see README.md). -->
  <!---->
	<bean id="transactionsDataSource" class="org.apache.derby.jdbc.ClientXADataSource">
		<property name="databaseName" value="eventdb;" />
		<property name="serverName" value="localhost" />
		<property name="createDatabase" value="create" />
	</bean>

	<!-- We're publishing our data source into the OSGi Service Registry as 
		a `XADataSource`. This will allow Aries JTA to automatically enlist this 
		resource as an XA-aware resource. We also assign the `osgi.jndi.service.name` 
		property to give us an easy-to-use JNDI name to lookup this data source from 
		our JPA persistence.xml in the `database` module afterwards. -->

	<service ref="transactionsDataSource" interface="javax.sql.XADataSource">
		<service-properties>
			<entry key="osgi.jndi.service.name" value="jdbc/eventds" />
			<entry key="datasource.name" value="Derby" />
		</service-properties>
	</service>

</blueprint>